/************************************
 *
 * File : GPU_Merge_F.cic
 * Date : Mar 21, 2018 2:17 PM
 *
*************************************/

/////////////////////////////////////
// include header section
/////////////////////////////////////

// ##DEFINE_SECTION::START
#define WIDTH 1280
#define HEIGHT 720
// ##DEFINE_SECTION::END

#include <stdio.h>

TASK_CODE_BEGIN

/////////////////////////////////////
// global definition
/////////////////////////////////////

// ##DEFINE_PORT_SECTION::START
STATIC int port_input_origin;
STATIC int port_input_hough;
STATIC int port_output;
// ##DEFINE_PORT_SECTION::END

STATIC unsigned char *src_o;
STATIC unsigned char *src_h;
STATIC unsigned char *dst;

/////////////////////////////////////
// init code
/////////////////////////////////////

TASK_INIT
{
// ##INIT_PORT_SECTION::START
    port_input_origin = PORT_INITIALIZE(TASK_ID, "input_origin");
    port_input_hough = PORT_INITIALIZE(TASK_ID, "input_hough");
    port_output = PORT_INITIALIZE(TASK_ID, "output");
// ##INIT_PORT_SECTION::END

    // TODO: task initialize code
    src_o = (unsigned char*)malloc(WIDTH*HEIGHT*3);
    src_h = (unsigned char*)malloc(WIDTH*HEIGHT*3);
    dst = (unsigned char*)malloc(WIDTH*HEIGHT*3);
}


/////////////////////////////////////
// go code
/////////////////////////////////////

TASK_GO
{
    // TODO: task main code
    MQ_RECEIVE(port_input_origin, (unsigned char*)src_o, WIDTH * HEIGHT * 3);
    printf("Merge_MQ_RECEIVE_FINISH!\n");
    MQ_RECEIVE(port_input_hough, (unsigned char*)src_h, WIDTH * HEIGHT * 3);
    printf("Merge_MQ_RECEIVE_FINISH!\n");
       
    int ix, iy = 0;

    for(ix = 0; ix < WIDTH; ix++){
        for(iy = 0; iy < HEIGHT; iy++){
            if(src_h[(WIDTH * iy + ix) * 3 + 0] == 255 && src_h[(WIDTH * iy + ix) * 3 + 1] == 0 && src_h[(WIDTH * iy + ix) * 3 + 2] == 0){
                dst[(WIDTH * iy + ix) * 3 + 0] = 255;
                dst[(WIDTH * iy + ix) * 3 + 1] = 0;
                dst[(WIDTH * iy + ix) * 3 + 2] = 0;
            }
            else{
                dst[(WIDTH * iy + ix) * 3 + 0] = src_o[(WIDTH * iy + ix) * 3 + 0];
                dst[(WIDTH * iy + ix) * 3 + 1] = src_o[(WIDTH * iy + ix) * 3 + 1];
                dst[(WIDTH * iy + ix) * 3 + 2] = src_o[(WIDTH * iy + ix) * 3 + 2];
            }
        }
    }
    
    MQ_SEND(port_output, (unsigned char*)dst, WIDTH * HEIGHT * 3);
    printf("Merge_MQ_SEND_FINISH!\n");
}



/////////////////////////////////////
// wrapup code
/////////////////////////////////////

TASK_WRAPUP
{
    // TODO: task wrapup code
    free(src_o);
    free(src_h);
    free(dst);
}

TASK_CODE_END
