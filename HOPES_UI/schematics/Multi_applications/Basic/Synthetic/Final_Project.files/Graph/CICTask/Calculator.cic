/************************************
 *
 * File : Cal.cic
 * Date : Oct 29, 2013 11:24 PM
 *
*************************************/

/////////////////////////////////////
// include header section
/////////////////////////////////////

// ##DEFINE_SECTION::START
// ##DEFINE_SECTION::END


TASK_CODE_BEGIN

/////////////////////////////////////
// global definition
/////////////////////////////////////

// ##DEFINE_PORT_SECTION::START
STATIC int port_in;
STATIC int port_out;
// ##DEFINE_PORT_SECTION::END

/////////////////////////////////////
// init code
/////////////////////////////////////
STATIC int value=0;
STATIC double d_result=0;
STATIC int i_result=0;
TASK_INIT
{
// ##INIT_PORT_SECTION::START
    port_in = PORT_INITIALIZE(TASK_ID, "in");
    port_out = PORT_INITIALIZE(TASK_ID, "out");
// ##INIT_PORT_SECTION::END

    // TODO: task initialize code

}


TASK_GO
{
    // TODO: task main code
    MQ_RECEIVE( port_in, (char*)&value, sizeof(int));
    char* currMode = SYS_REQ(GET_MODE, "Graph_Calculator");
    if(strcmp(currMode, "SIN") == 0)         d_result = LIBCALL(math, my_sin, ((double)value * 3.14 / 180));
    else if(strcmp(currMode, "COS") == 0)    d_result = LIBCALL(math, my_cos, ((double)value * 3.14 / 180));
    i_result = (int)(d_result * 40);
    MQ_SEND( port_out,(const char*)&i_result, sizeof(int));
}



/////////////////////////////////////
// wrapup code
/////////////////////////////////////

TASK_WRAPUP
{
    // TODO: task wrapup code

}

TASK_CODE_END
