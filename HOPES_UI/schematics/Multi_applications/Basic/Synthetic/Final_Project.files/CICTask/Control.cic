/************************************
 *
 * File : Control.cic
 * Date : Oct 29, 2013 11:10 PM
 *
*************************************/

//-----------------------------------
// include header section
//-----------------------------------

// ##DEFINE_SECTION::START
#define ID_STATE_IDLE 0
#define ID_STATE_GRAPH 1
#define ID_STATE_IMAGE 2
#define ID_TRANSITION_TRANSITION_0 0
#define ID_TRANSITION_TRANSITION_1 1
#define ID_TRANSITION_TRANSITION_2 2
#define ID_TRANSITION_TRANSITION_3 3
// ##DEFINE_SECTION::END

TASK_CODE_BEGIN

//-----------------------------------
// global definition
//-----------------------------------

// ##DEFINE_PORT_SECTION::START
STATIC int port_in;
// ##DEFINE_PORT_SECTION::END

// ##VARIABLE_SECTION::START
static int current_state;
// ##VARIABLE_SECTION::END


//-----------------------------------
// init code
//-----------------------------------

TASK_INIT
{
// This is automatically generated code. do not edit this part.
// ##INIT_PORT_SECTION::START
    port_in = PORT_INITIALIZE(TASK_ID, "in");
// ##INIT_PORT_SECTION::END

// ##INIT_SECTION::START
	current_state = ID_STATE_IDLE;
// ##INIT_SECTION::END


    // TODO: task initialize code
    SYS_REQ(STOP_TASK, "Image");
    SYS_REQ(STOP_TASK, "Graph");
}



//-----------------------------------
// go code
//-----------------------------------
STATIC int iter = 1;
TASK_GO
{
// This is automatically generated code. do not edit this part.
// ##GO_SECTION::START
	int previous_state = current_state;

	// Add trigerring code here.

	switch( current_state )
	{
	case ID_STATE_IDLE:
		{
			int in_buf = 0;
			int ret_in = MQ_AVAILABLE(port_in);
			if(ret_in > 0)	MQ_RECEIVE(port_in, (unsigned char*)&in_buf, sizeof(int));
			if(in_buf == 1)
			{
				// Add exit code for ID_STATE_IDLE state here.

				// Add transition code for "from ID_STATE_IDLE state to ID_STATE_GRAPH state" here.
                SYS_REQ(RUN_TASK, "Graph");
				// State transition
				current_state = ID_STATE_GRAPH;
				// Add enter code for ID_STATE_GRAPH state here.

			}
			else if(in_buf == 2)
			{
				// Add exit code for ID_STATE_IDLE state here.
				
				// Add transition code for "from ID_STATE_IDLE state to ID_STATE_IMAGE state" here.
				SYS_REQ(SET_PARAM_INT, "Image", "Gain", iter*10);
				iter++;
				if(iter == 5)    iter = 0;
                SYS_REQ(RUN_TASK, "Image");
				// State transition
				current_state = ID_STATE_IMAGE;
				// Add enter code for ID_STATE_IMAGE state here.

			}
		}
		break;
	case ID_STATE_GRAPH:
		{
			int Graph_status = SYS_REQ(CHECK_TASK_STATE, "Graph");
			if(Graph_status == STATE_STOP)
			{
				// Add exit code for ID_STATE_GRAPH state here.

				// Add transition code for "from ID_STATE_GRAPH state to ID_STATE_IDLE state" here.

				// State transition
				current_state = ID_STATE_IDLE;

				// Add enter code for ID_STATE_IDLE state here.
				
			}
			else
			{
			    usleep(1000);
			}
		}
		break;
	case ID_STATE_IMAGE:
		{
			int Image_status = SYS_REQ(CHECK_TASK_STATE, "Image");
			if(Image_status == STATE_STOP)
			{
				// Add exit code for ID_STATE_IMAGE state here.

				// Add transition code for "from ID_STATE_IMAGE state to ID_STATE_IDLE state" here.

				// State transition
				current_state = ID_STATE_IDLE;

				// Add enter code for ID_STATE_IDLE state here.

			}
            else
			{
			    usleep(1000);
			}
		}
		break;
	}
// ##GO_SECTION::END


    // TODO: task main code

}

//-----------------------------------
// wrapup code
//-----------------------------------

TASK_WRAPUP
{
// This is automatically generated code. do not edit this part.
// ##WRAPUP_SECTION::START
// ##WRAPUP_SECTION::END


	// TODO: task wrapup code

}

TASK_CODE_END
