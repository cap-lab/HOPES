/************************************
 *
 * File : Wheel.cic
 * Date : Feb 25, 2019 4:03 PM
 *
*************************************/

/////////////////////////////////////
// include header section
/////////////////////////////////////

// ##DEFINE_SECTION::START
// ##DEFINE_SECTION::END


TASK_CODE_BEGIN

/*******************************************************************************
* Declaration for Hardware Timer (Interrupt control)
*******************************************************************************/

/*******************************************************************************
* Declaration for RC100 remote conroller
*******************************************************************************/

/*******************************************************************************
* Declaration for motor
*******************************************************************************/




/////////////////////////////////////
// global definition
/////////////////////////////////////

// ##DEFINE_PORT_SECTION::START
STATIC int port_signal;
// ##DEFINE_PORT_SECTION::END
STATIC int led_pin = 13;
STATIC int led_pin_user[4] = { BDPIN_LED_USER_1, BDPIN_LED_USER_2, BDPIN_LED_USER_3, BDPIN_LED_USER_4 };
/////////////////////////////////////
// init code
/////////////////////////////////////




int isOn = 0;

TASK_INIT
{
	// ##INIT_PORT_SECTION::START
    port_signal = PORT_INITIALIZE(TASK_ID, "signal");
// ##INIT_PORT_SECTION::END
			
}


/////////////////////////////////////
// go code
/////////////////////////////////////

TASK_GO
{  
    int signal = -1;
    if((MQ_AVAILABLE(port_signal) > 0)){
            MQ_RECEIVE(port_signal, (unsigned char *)&signal, sizeof(int));    
    
            int i = 0;
            if(signal == 1 && isOn == 0){
                for( i=0; i<4; i++ )
                {
                    digitalWrite(led_pin_user[i], LOW);
                }
                isOn = 1;
            }
            else if(signal == 0 && isOn == 1){
                for( i=0; i<4; i++ )
                {
                    digitalWrite(led_pin_user[i], HIGH);
                }
                isOn = 0;
            }            
        }
}



/////////////////////////////////////
// wrapup code
/////////////////////////////////////

TASK_WRAPUP
{

}

TASK_CODE_END
